#!/usr/bin/python -tt
# -*- coding: UTF-8 -*-

import sys, os
sys.path.append(os.path.join(os.path.dirname(__file__), '..'))

from doorcontrol import DoorListener
from doorcontrol import LdapConnector
import logging

from smartcard.System import readers
from smartcard.CardMonitoring import CardMonitor, CardObserver
from smartcard.util import *

from time import sleep


def main():

    # config file
    config_path = os.path.join(os.path.dirname(__file__), '../doorcontrol/conf.yml')
    
    # Create the logger
    logger = logging.getLogger('DoorControl')
    log_path = os.path.join(os.path.dirname(__file__), '../log/')
    
    # If the path to the log file doesn't exists, create it
    if not os.path.exists(log_path):
      os.makedirs(log_path)
    handler = logging.FileHandler(log_path + "door.log")
    
    # Nice simple format for the logger
    formatter = logging.Formatter('[ %(asctime)s ]  %(levelname)s : %(message)s')
    handler.setFormatter(formatter)
    
    # Finish setting the log handler
    logger.addHandler(handler) 
    logger.setLevel(logging.INFO)
    
    try:
        cardmonitor = CardMonitor()

        # The ldap connector
        ldap = LdapConnector.LdapConnector(config_path, logger)
        
        # The door listener
        cardobserver = DoorListener.DoorListener(ldap, config_path, logger)
        
        # Adds the observers
        cardmonitor.addObserver(cardobserver)
        
        while 1:
            # Need to keep the program awake, otherwise
            # it will end
            sleep(5)
    except Exception as e:
        logger.error("Could not initialize smartCardReader")
        logger.error(e)
        sys.exit()

if __name__ == '__main__':
    main()

